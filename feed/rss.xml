<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>/dev/sulami &gt;&gt; blog</title><link>https://sulami.github.io/</link><description></description><lastBuildDate>Mon, 31 Oct 2016 00:00:00 +0100</lastBuildDate><item><title>Failing and the startup game</title><link>https://sulami.github.io/failing-and-the-startup-game.html</link><description>&lt;p&gt;I have now lived in the startup sphere for several years, and I have seen
startups succeed beyond anyone&amp;#8217;s expectations and it just now happens that I see
a startup fall short of its goals and essentially die. I&amp;#8217;m not going to name
anything or anyone specific, mainly …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Mon, 31 Oct 2016 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:sulami.github.io,2016-10-31:/failing-and-the-startup-game.html</guid></item><item><title>Staying healthy as a programmer</title><link>https://sulami.github.io/staying-healthy-as-a-programmer.html</link><description>&lt;p&gt;&lt;em&gt;Disclaimer&lt;/em&gt; In this post I link to some specific products. These links serve as
examples and are by no means direct reccomendations. Some of these are just the
result of a quick web search. If you decide to buy stuff, do your research,
figure out what exactly you need and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Wed, 22 Jun 2016 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:sulami.github.io,2016-06-22:/staying-healthy-as-a-programmer.html</guid></item><item><title>Emacs From a Vim Addict’s Perspective</title><link>https://sulami.github.io/emacs-from-a-vim-addicts-perspective.html</link><description>&lt;p&gt;I have been playing around in Emacs lately. Vim has been the core of my workflow
for half a decade now, and I just cannot imagine going back to non-modal editing
anymore. I will now explain, why I might just switch to emacs in the&amp;nbsp;long-term.&lt;/p&gt;
&lt;p&gt;If you compare Emacs …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Thu, 03 Mar 2016 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:sulami.github.io,2016-03-03:/emacs-from-a-vim-addicts-perspective.html</guid></item><item><title>Why you need fuzz testing</title><link>https://sulami.github.io/why-you-need-fuzz-testing.html</link><description>&lt;p&gt;Unittesting is an important part of building reliable software, although by far
not the only one. But many programmers misunderstand the purpose of unittests.
Classic unittests have two purposes: They force you to develop a spec and
enforce it, and they can protect you against regression when refactoring or
otherwise …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Tue, 23 Feb 2016 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:sulami.github.io,2016-02-23:/why-you-need-fuzz-testing.html</guid></item><item><title>Can Software Die?</title><link>https://sulami.github.io/can-software-die.html</link><description>&lt;p&gt;Software can be classified as alive. Not using the &lt;a href="https://en.wikipedia.org/wiki/Life"&gt;Wikipedia definition&lt;/a&gt;
of alive, because that requires biological processes, but philosophically seen
software is kind of like a living organism. There are constant changes as the
software evolves, adapts to environmental changes and grows new&amp;nbsp;features.&lt;/p&gt;
&lt;p&gt;But what if it stops …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Sun, 07 Feb 2016 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:sulami.github.io,2016-02-07:/can-software-die.html</guid></item><item><title>Why I use Pomodoro</title><link>https://sulami.github.io/why-i-use-pomodoro.html</link><description>&lt;p&gt;Almost every programmer knows what it means to get in the zone. That weird
feeling you get at two in the morning while working on a side-project, when the
the time flies by and suddenly all important features are done. Mastering the
zone is a crucial element of maximizing your …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Mon, 11 Jan 2016 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:sulami.github.io,2016-01-11:/why-i-use-pomodoro.html</guid></item><item><title>Data-Pipelines in Haskell</title><link>https://sulami.github.io/data-pipelines-in-haskell.html</link><description>&lt;p&gt;Today I was writing some code in Golang and thought about why Haskell feels so
much more powerful and expressive. Then I had a revelation. Haskell follows the
&lt;span class="caps"&gt;UNIX&lt;/span&gt; philosophy, focussing on small functions that do exactly one thing (at
least good Haskell code does so). It also makes these …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Mon, 07 Dec 2015 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:sulami.github.io,2015-12-07:/data-pipelines-in-haskell.html</guid></item><item><title>Using Hoogle for your project</title><link>https://sulami.github.io/using-hoogle-for-your-project.html</link><description>&lt;p&gt;&lt;a href="https://github.com/ndmitchell/hoogle"&gt;Hoogle&lt;/a&gt; is a fantastic tool that uses
Haskell&amp;#8217;s type system to build a searchable index of types, functions and
constants, connecting with &lt;a href="https://www.haskell.org/haddock/"&gt;Haddock&lt;/a&gt; to
provide documentation. It can be used to host browsable websites, like the
&lt;a href="https://www.haskell.org/hoogle/"&gt;Hackage instance&lt;/a&gt; or the &lt;a href="http://www.stackage.org/lts-3.15/hoogle"&gt;Stackage
instance&lt;/a&gt;, or used for editor
integration, like in …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Thu, 26 Nov 2015 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:sulami.github.io,2015-11-26:/using-hoogle-for-your-project.html</guid></item><item><title>Concurrent I/O in Haskell</title><link>https://sulami.github.io/concurrent-io-in-haskell.html</link><description>&lt;p&gt;Today just after waking up, I have been tweaking the last bits and bops of
&lt;a href="https://github.com/sulami/tinfoilsub"&gt;TinfoilSub&lt;/a&gt;, a satiric fun/learning
project of mine that scrapes YouTube channels to replicate a subscriptions page
without requiring a Google account. The core of this little program is the
&lt;code&gt;runServer&lt;/code&gt; function that uses
&lt;a href="https://hackage.haskell.org/package/scotty"&gt;Scotty …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Fri, 11 Sep 2015 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:sulami.github.io,2015-09-11:/concurrent-io-in-haskell.html</guid></item><item><title>Windows 10: Post-Launch Thoughts</title><link>https://sulami.github.io/windows-10-post-launch-thoughts.html</link><description>&lt;p&gt;So it has been two weeks since the official Windows 10 launch, and there have
been a lot of discussions about it. I am going to summarize some of my own
thoughts, now that I had the chance to test it&amp;nbsp;myself.&lt;/p&gt;
&lt;p&gt;Windows 10 is the newest and &lt;a href="http://www.theguardian.com/technology/2015/may/11/windows-10-last-version-microsoft"&gt;supposedly last …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Thu, 13 Aug 2015 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:sulami.github.io,2015-08-13:/windows-10-post-launch-thoughts.html</guid></item><item><title>A* Pathfinding in Functional Languages</title><link>https://sulami.github.io/a-pathfinding-in-functional-languages.html</link><description>&lt;p&gt;&amp;#8230; like, you guessed it, Haskell. But this should translate to Lisp quite
well. &lt;a href="https://en.wikipedia.org/wiki/A*_search_algorithm"&gt;A* (A star)&lt;/a&gt; is a graph traversal algorithm that is commonly used
for pathfinding in video games, and probably also things like navigational
software. It is an extension to &lt;a href="https://en.wikipedia.org/wiki/Dtra%27s_algorithm"&gt;Dijkstra&amp;#8217;s algorithm&lt;/a&gt;. If you do not know …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Thu, 23 Jul 2015 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:sulami.github.io,2015-07-23:/a-pathfinding-in-functional-languages.html</guid></item><item><title>Embrace the REPL</title><link>https://sulami.github.io/embrace-the-repl.html</link><description>&lt;p&gt;As some of you may be aware, the tool of my choice is &lt;a href="http://vim.org"&gt;vim&lt;/a&gt; (or
&lt;a href="https://github.com/neovim/neovim"&gt;neovim&lt;/a&gt;). Two of the languages I write a lot in are Haskell and Python,
because both of these languages are very nice to quickly prototype something
in. Both of these languages also feature what is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Thu, 23 Jul 2015 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:sulami.github.io,2015-07-23:/embrace-the-repl.html</guid></item><item><title>Haskell Flood Fills</title><link>https://sulami.github.io/haskell-flood-fills.html</link><description>&lt;p&gt;Over the past two days, I played a bit with the &lt;a href="https://hackthe.computer/"&gt;hackthe.computer
contest&lt;/a&gt;. It is a contest with a couple of problems/tasks where you have
one week to write up the best solutions in terms of speed. Part of the
difficulty comes from the fact, that you push …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Tue, 21 Jul 2015 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:sulami.github.io,2015-07-21:/haskell-flood-fills.html</guid></item><item><title>Solving Sudokus</title><link>https://sulami.github.io/solving-sudokus.html</link><description>&lt;p&gt;So, here is more Haskell from me, because I really like it. This time around, I
wrote a small and simple sudoku solver. Sudokus are really nice little puzzles
that involve a partially filled 9x9 grid containing numbers from one to nine.
The objective is to fill it following these …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Mon, 06 Jul 2015 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:sulami.github.io,2015-07-06:/solving-sudokus.html</guid></item><item><title>A fuzzy finder in Haskell</title><link>https://sulami.github.io/a-fuzzy-finder-in-haskell.html</link><description>&lt;p&gt;This is a response to &lt;em&gt;&lt;a href="http://blog.amjith.com/fuzzyfinder-in-10-lines-of-python"&gt;FuzzyFinder - in 10 lines of Python&lt;/a&gt;&lt;/em&gt;, which was
posted to reddit&amp;nbsp;yesterday.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Following the blogpost linked above, I decided to write my own fuzzy finder in
Haskell, because that is the language I am currently learning, and think has
great potential. It is also a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Wed, 24 Jun 2015 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:sulami.github.io,2015-06-24:/a-fuzzy-finder-in-haskell.html</guid></item><item><title>Thoughts on Windows 10 and free software</title><link>https://sulami.github.io/thoughts-on-windows-10-and-free-software.html</link><description>&lt;p&gt;Today I had a very interesting conversation about the modern software world
with a non-technical friend of&amp;nbsp;mine.&lt;/p&gt;
&lt;p&gt;Back when it happened, I considered Windows Vista a slip, they had something
new in mind, I could see the vision, but it did not work out, which is why I
never …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Tue, 23 Jun 2015 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:sulami.github.io,2015-06-23:/thoughts-on-windows-10-and-free-software.html</guid></item><item><title>Which OS do I use?</title><link>https://sulami.github.io/which-os-do-i-use.html</link><description>&lt;p&gt;Since I &lt;a href="https://sulami.github.io/systemdebacle.html"&gt;wrote about systemd&lt;/a&gt; a few weeks back, I have been looking out for
an operating system that I truly love, that is without systemd whatsoever. My
ideal specifications involved a philosophy that is close to &lt;span class="caps"&gt;BSD&lt;/span&gt;&amp;#8217;s, with a focus
on stable software and exhaustive documentation, while being …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Wed, 10 Jun 2015 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:sulami.github.io,2015-06-10:/which-os-do-i-use.html</guid></item><item><title>SystemDebacle</title><link>https://sulami.github.io/systemdebacle.html</link><description>&lt;p&gt;I am writing about systemd today, because now, that the new release of Debian
with systemd is out, there is pretty much only one major distribution left that
is not forcing its users to use systemd, that being Gentoo. I have for quite a
long time defended systemd while it …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Tue, 28 Apr 2015 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:sulami.github.io,2015-04-28:/systemdebacle.html</guid></item><item><title>Homeworld on Linux (or OSX)</title><link>https://sulami.github.io/homeworld-on-linux-or-osx.html</link><description>&lt;p&gt;Today I will write about something slightly different than usual. I will be
writing about a videogame, Homeworld. These days, Homeworld 1 and 2 are being
released in remastered editions, with support for current resolutions and so
on. This led me to playing the original. Homeworld 1 has been ported …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Mon, 23 Feb 2015 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:sulami.github.io,2015-02-23:/homeworld-on-linux-or-osx.html</guid></item><item><title>My thoughts about Go</title><link>https://sulami.github.io/my-thoughts-about-go.html</link><description>&lt;p&gt;After having used &lt;a href="https://golang.org"&gt;Go&lt;/a&gt; almost exclusively for the last two weeks, and
for the first time seriously, I think I can give a general statement on what I
think about it, analogous to &lt;a href="https://sulami.github.io/my-thoughts-about-d.html"&gt;D&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Go has been in development at Google for a few years now, mainly by Robert
Griesemer …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Wed, 18 Feb 2015 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:sulami.github.io,2015-02-18:/my-thoughts-about-go.html</guid></item><item><title>A practical solution for Twitch.tv</title><link>https://sulami.github.io/a-practical-solution-for-twitchtv.html</link><description>&lt;p&gt;I have now written three scripts to stream to Twitch.tv from Linux, and all of
them were just hardcoded ffmpeg commands. Today I am proud to present an actual
streaming script that takes arguments, passes them to ffmpeg in the proper way
to enable streaming and parses the output …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Sun, 08 Feb 2015 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:sulami.github.io,2015-02-08:/a-practical-solution-for-twitchtv.html</guid></item><item><title>Using Xephyr to simulate multiple monitors</title><link>https://sulami.github.io/using-xephyr-to-simulate-multiple-monitors.html</link><description>&lt;p&gt;One of the most requested features in &lt;a href="https://github.com/sulami/frankenwm"&gt;FrankenWM&lt;/a&gt; is support for multiple
monitors. I currently only use one monitor, mostly because I do not need more
right now (there have been time where I have been using 4 monitors at the same
time, all connected to one machine). This situation …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Fri, 19 Dec 2014 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:sulami.github.io,2014-12-19:/using-xephyr-to-simulate-multiple-monitors.html</guid></item><item><title>On social media</title><link>https://sulami.github.io/on-social-media.html</link><description>&lt;p&gt;Do we need social networks? I do not think so. This might sound fairly drastic
which I am aware of, but let me explain how I came to this conclusion, network
by&amp;nbsp;network:&lt;/p&gt;
&lt;h1&gt;Facebook&lt;/h1&gt;
&lt;p&gt;Obviously the biggest and most used one. Almost everyone in the first world has
a Facebook …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Mon, 27 Oct 2014 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:sulami.github.io,2014-10-27:/on-social-media.html</guid></item><item><title>Choosing a mobile workstation</title><link>https://sulami.github.io/choosing-a-mobile-workstation.html</link><description>&lt;h1&gt;Update&amp;nbsp;2014-10-30&lt;/h1&gt;
&lt;p&gt;Peter Wu wrote me about this topic and sent me &lt;a href="http://brianolsen.wordpress.com/2014/04/08/system-76-gazelle-professional-9-clevo-w650sz-short-review/"&gt;a review&lt;/a&gt; of the System76
Gazelle, which raises concerns. A quick search for Galago reviews also resulted
in &lt;a href="http://bitflip.net/system76-galago-ultrapro-review-clevo-w740su-259/"&gt;another quite negative review&lt;/a&gt;. The System76 notebooks seem to be
mostly rebranded Clevo machines with questionable quality. That pretty much …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Fri, 24 Oct 2014 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:sulami.github.io,2014-10-24:/choosing-a-mobile-workstation.html</guid></item><item><title>My thoughts about D</title><link>https://sulami.github.io/my-thoughts-about-d.html</link><description>&lt;p&gt;Roughly two weeks ago, a blogpost about the &lt;a href="http://dlang.org"&gt;D language&lt;/a&gt; popped up on both
hackernews and reddit. I took the time to read it, and it inspired me to try D
out for myself. Here are some of my thoughts, about two weeks into the
language, with prior experience in …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Wed, 03 Sep 2014 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:sulami.github.io,2014-09-03:/my-thoughts-about-d.html</guid></item><item><title>Write code every day</title><link>https://sulami.github.io/write-code-every-day.html</link><description>&lt;p&gt;After failing several times, today I managed to get a 30-day streak on my
personal GitHub account. This happened, because I challenged myself a few
months ago to accomplish exactly that. Now, that I succeeded after I once
failed at day 29 by simply forgetting to write something, I can …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:sulami.github.io,2014-08-11:/write-code-every-day.html</guid></item><item><title>Using git locally</title><link>https://sulami.github.io/using-git-locally.html</link><description>&lt;p&gt;When you write your code, using a version control mechanism like git is
crucial, even more than writing proper unit tests, even when working on your
own, even when it is only your evening project. Just use git and commit
regularly, it will not hurt you (unless your workflow is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Tue, 15 Jul 2014 01:50:00 +0200</pubDate><guid isPermaLink="false">tag:sulami.github.io,2014-07-15:/using-git-locally.html</guid></item><item><title>My own window manager</title><link>https://sulami.github.io/my-own-window-manager.html</link><description>&lt;p&gt;I accidentaly wrote a &lt;a href="https://github.com/sulami/frankenwm"&gt;window manager&lt;/a&gt;. It started out by cloning &lt;a href="https://github.com/cloudef/monsterwm-xcb"&gt;cloudef&amp;#8217;s
monsterwm-xcb&lt;/a&gt; to apply some smaller fixes, maybe opening a pull request to
merge them upstream again. But I quickly found more and more things to fix,
then I started to add some smaller features I missed from …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Sat, 05 Jul 2014 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:sulami.github.io,2014-07-05:/my-own-window-manager.html</guid></item><item><title>Getting rid of Flash</title><link>https://sulami.github.io/getting-rid-of-flash.html</link><description>&lt;p&gt;I started using the &lt;span class="caps"&gt;HTML5&lt;/span&gt;-Player on YouTube, because Flash kept breaking
fullscreen, and I have not found a single video not supporting &lt;span class="caps"&gt;HTML5&lt;/span&gt; in over a
month, so I would consider Flash-less YouTube a valid option. I also discovered
that Vimeo uses a pretty nice &lt;span class="caps"&gt;HTML5&lt;/span&gt; player on their …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Tue, 27 May 2014 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:sulami.github.io,2014-05-27:/getting-rid-of-flash.html</guid></item><item><title>Test-driven development in vim</title><link>https://sulami.github.io/test-driven-development-in-vim.html</link><description>&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Test-driven_development"&gt;Test-driven development (&lt;span class="caps"&gt;TDD&lt;/span&gt;)&lt;/a&gt; is a way of developing software by using
tests over and over again. When I first was introduced to this concept, I
thought, automated tests are a nice idea, why not? Then I read a book about
&lt;span class="caps"&gt;TDD&lt;/span&gt;, which proceeded to explain how you start your project …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Mon, 05 May 2014 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:sulami.github.io,2014-05-05:/test-driven-development-in-vim.html</guid></item><item><title>IRC-client showdown, extreme version</title><link>https://sulami.github.io/irc-client-showdown-extreme-version.html</link><description>&lt;p&gt;I love &lt;span class="caps"&gt;IRC&lt;/span&gt;. I try to keep all my common software on the shell in case I
somehow loose my ability to use X. This also enables me to use global
colorscheme and is performance-wise advantegous. There are many reasons
to live in the shell (aside from web-browsing, which is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Wed, 19 Mar 2014 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:sulami.github.io,2014-03-19:/irc-client-showdown-extreme-version.html</guid></item><item><title>My take on secure communication</title><link>https://sulami.github.io/my-take-on-secure-communication.html</link><description>&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; I am not really into crypto (yet?) and everything I
write here is purely idealistic and probably somewhat&amp;nbsp;unrealistic/stupid&lt;/p&gt;
&lt;h2&gt;The current&amp;nbsp;situation&lt;/h2&gt;
&lt;p&gt;Some time ago, Facebook bought Whatsapp, which was my main way of
communicating using my phone. This event has made me think about where
the internet …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Wed, 19 Mar 2014 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:sulami.github.io,2014-03-19:/my-take-on-secure-communication.html</guid></item><item><title>My own perfect world (aka what you should do)</title><link>https://sulami.github.io/my-own-perfect-world-aka-what-you-should-do.html</link><description>&lt;p&gt;I have to admit, I am a little bit perfectionist. Maybe more. There are
some conventions I found useful, but there are always people who do not
follow those conventions, some because they do not want to, but mostly
they just do not care. I just want to list some …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Mon, 17 Mar 2014 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:sulami.github.io,2014-03-17:/my-own-perfect-world-aka-what-you-should-do.html</guid></item><item><title>My favourite Tech-Talks</title><link>https://sulami.github.io/my-favourite-tech-talks.html</link><description>&lt;p&gt;I love talks, others might call them presentations. There are thousands
of talks on YouTube and watching them all would take ages, but I
sometimes watch talks before going to bed instad of watching &lt;span class="caps"&gt;TV&lt;/span&gt;.  So I
thought, I could compile a small list of my favourite talks featuring
technical …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Sat, 25 Jan 2014 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:sulami.github.io,2014-01-25:/my-favourite-tech-talks.html</guid></item><item><title>Prism: What to do</title><link>https://sulami.github.io/prism-what-to-do.html</link><description>&lt;p&gt;While following the recent international events, I (and probably
everyone else) heard about the &lt;span class="caps"&gt;NSA&lt;/span&gt; and Prism. Now I always distrusted
big companies, especially the ones from the &lt;span class="caps"&gt;US&lt;/span&gt;, because I know money and
power are everything over there. If they want to spy on you, they can.
Now there …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Tue, 18 Jun 2013 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:sulami.github.io,2013-06-18:/prism-what-to-do.html</guid></item><item><title>Raspberry Pi: Radio-Alarm</title><link>https://sulami.github.io/raspberry-pi-radio-alarm.html</link><description>&lt;p&gt;Some years ago I had the idea to use online radios as flexible alarm
clocks, but the main problem was having to run the computer all night
long, which results in high power consumption and noise. While netbooks
can counter this to a certain degree, the Raspberry Pi is the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Fri, 07 Jun 2013 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:sulami.github.io,2013-06-07:/raspberry-pi-radio-alarm.html</guid></item><item><title>Learning to type properly</title><link>https://sulami.github.io/learning-to-type-properly.html</link><description>&lt;p&gt;When it comes to &lt;span class="caps"&gt;IT&lt;/span&gt;-people, especially the ones ocassionally programming,
typing properly is a mandatory skill, but basically everyone benefits from fast
typing. Most people developed some kind of 2-6-finger system, which might work
well, but is still suboptimal compared to 10-finger touch typing. There are
some ways of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Tue, 14 May 2013 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:sulami.github.io,2013-05-14:/learning-to-type-properly.html</guid></item><item><title>Streaming to Twitch.tv using ffmpeg and ALSA</title><link>https://sulami.github.io/streaming-to-twitchtv-using-ffmpeg-and-alsa.html</link><description>&lt;p&gt;Well, as I lost my database, I could not recover this article, but I
still got my script, so here you&amp;nbsp;go:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;INRES=&amp;quot;1920x1080&amp;quot;
OUTRES=&amp;quot;1920x1080&amp;quot;
FPS=&amp;quot;30&amp;quot;
QUAL=&amp;quot;medium&amp;quot;
STREAM_KEY=&amp;quot;live_123_xxx&amp;quot;

ffmpeg
-f x11grab
-s &amp;quot;$INRES&amp;quot;
-r &amp;quot;$FPS&amp;quot;
-i :0.0+0,0
-itsoffset -00:00:01
-f alsa …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">sulami</dc:creator><pubDate>Tue, 14 May 2013 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:sulami.github.io,2013-05-14:/streaming-to-twitchtv-using-ffmpeg-and-alsa.html</guid></item></channel></rss>